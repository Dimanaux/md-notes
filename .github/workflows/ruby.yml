name: Rspec

on: [push]

jobs:
  quality:
    runs-on: ubuntu-latest
    name: Quality
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'
      - name: Cache bundle
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install Rubocop
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Check code
        run: |
          cp .env.example .env
          bin/quality
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres
        ports: ['5432:5432']
        env:
          POSTGRES_HOST: localhost
          POSTGRES_USER: md_notes
          POSTGRES_PASSWORD: md_notes
          RAILS_ENV: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby 2.6
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'
      - name: Cache bundle
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install dependencies
        run: |
          sudo apt-get -yqq install libpq-dev
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
          cp .env.example .env
      - name: Test with RSpec
        env:
          POSTGRES_HOST: localhost
          POSTGRES_USER: md_notes
          POSTGRES_PASSWORD: md_notes
          RAILS_ENV: test
        run: |
          bundle exec rails db:create
          bundle exec rails db:migrate
          bundle exec rspec
      - name: Upload coverage results
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: coverage-report
          path: coverage
