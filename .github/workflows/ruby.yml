env:
  RUBY_VERSION: 2.6.5
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: postgres

name: Rspec
on: [push]
jobs:
  # rubocop-test:
  #   name: Quality
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions/setup-ruby@v1
  #       with:
  #         ruby-version: ${{ env.RUBY_VERSION }}
  #     - name: Set up environment
  #       run: cp .env.example .env
  #     - name: Install Rubocop
  #       run: |
  #         gem install bundler
  #         bundle
  #     - name: Check code
  #       run: bin/quality
  rspec-test:
    name: RSpec
    runs-on: ubuntu-18.04

    services:
      postgres:
        image: postgres:11.6-alpine
        env:
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - name: Install postgres client
        run: sudo apt-get install libpq-dev
      - name: Install dependencies
        run: |
          gem install bundler
          bundle
      - name: Set up environment
        run: cp .env.example .env
      - name: Create database
        run: |
          bundler exec rails db:create RAILS_ENV=test
          bundler exec rails db:migrate RAILS_ENV=test
        env:
          DATABASE_PORT: ${{ job.services.postgres.ports[5432] }}
      - name: Run tests
        run: bundler exec rake
        env:
          DATABASE_PORT: ${{ job.services.postgres.ports[5432] }}
      - name: Upload coverage results
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: coverage-report
          path: coverage
